{"version":3,"sources":["component/ReadOnlyRow.js","component/EditableRow.js","App.js","reportWebVitals.js","index.js"],"names":["ReadOnlyRow","bookDetail","handleEditClick","handleDeleteClick","Author","Title","Published","Branch","Quantity","type","onClick","event","id","EditableRow","editFormData","handleEditFormChange","handleCancelClick","value","name","required","placeholder","onChange","App","useState","data","bookDetails","setBookDetails","addFormData","setAddFormData","setEditFormData","editBookId","setEditBookId","handleFormChange","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","formValues","bookId","newBookDetails","index","findIndex","splice","className","onSubmit","editedBookDetail","map","newBookDetail","nanoid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cecff12d.chunk.js","sourcesContent":["import React  from \"react\";\r\n\r\nconst ReadOnlyRow =({bookDetail,handleEditClick,handleDeleteClick})=>{\r\n    return(\r\n        \r\n            <tr>\r\n          <td>{bookDetail.Author}</td>\r\n          <td>{bookDetail.Title}</td>\r\n          <td>{bookDetail.Published}</td>\r\n          <td>{bookDetail.Branch}</td>\r\n          <td>{bookDetail.Quantity}</td>\r\n          <td>\r\n              <button type='button ' onClick={(event)=>handleEditClick(event,bookDetail)}>Edit</button>\r\n              <button type ='button' onClick ={()=>handleDeleteClick(bookDetail.id)}>Delete</button>\r\n          </td>\r\n          </tr>\r\n        \r\n    );\r\n};\r\nexport default ReadOnlyRow;","import React from \"react\";\r\n\r\nconst EditableRow =({editFormData,handleEditFormChange , handleCancelClick })=>{\r\n    return(\r\n        <tr>\r\n            <td> <input type='text' value ={editFormData.Author} name='Author' required =\"required\" placeholder =\"Enter Author...\" onChange ={handleEditFormChange} /></td>\r\n            <td> <input type='text' value ={editFormData.Title} name='Title' required =\"required\" placeholder =\"Enter Title of book...\" onChange ={handleEditFormChange}/></td>\r\n            <td><input type='text' value={editFormData.Published} name='Published' required =\"required\" placeholder=\"Enter Published Year...\" onChange ={handleEditFormChange}/></td>\r\n            <td>  <input type='text' value={editFormData.Branch}name='Branch' required =\"required\" placeholder =\"Enter Branch...\"onChange ={handleEditFormChange}/></td>\r\n            <td><input type='text' value={editFormData.Quantity}name='Quantity' required =\"required\" placeholder =\"Enter Quantity...\"onChange ={handleEditFormChange}></input></td>\r\n            <td><button type='submit'>Save</button> <button type='button' onClick ={handleCancelClick}>Cancel</button></td>\r\n            {/* <td></td> */}\r\n            \r\n        </tr>\r\n    )\r\n}\r\nexport default EditableRow;\r\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport './App.css';\nimport data from './mock-data.json';\nimport ReadOnlyRow from './component/ReadOnlyRow';\nimport EditableRow from './component/EditableRow';\n\nfunction App() {\n  const [bookDetails, setBookDetails] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    Author: '',\n    Title: '',\n    Published: \"\",\n    Branch: \"\",\n    Quantity: \"\"\n  })\n  const [editFormData, setEditFormData] = useState({\n    Author: '',\n    Title: '',\n    Published: \"\",\n    Branch: \"\",\n    Quantity: \"\"\n  })\n\n  const [editBookId, setEditBookId] = useState(null);\n\n  const handleFormChange = (event) => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute('name');\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData);\n  }\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  }\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n    const newBookDetail = {\n      id: nanoid(),\n      Author: addFormData.Author,\n      Title: addFormData.Title,\n      Published: addFormData.Published,\n      Branch: addFormData.Branch,\n      Quantity: addFormData.Quantity\n    }\n    const newBookDetails = [...bookDetails, newBookDetail];\n    setBookDetails(newBookDetails);\n  }\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n    const editedBookDetail = {\n      id: editBookId,\n      Author: editFormData.Author,\n      Title: editFormData.Title,\n      Published: editFormData.Published,\n      Branch: editFormData.Branch,\n      Quantity: editFormData.Quantity\n    }\n    const newBookDetails = [...bookDetails];\n    const index = bookDetails.findIndex((bookDetail) => bookDetail.id === editBookId);\n    newBookDetails[index] = editedBookDetail;\n    setBookDetails(newBookDetails);\n    setEditBookId(null);\n  }\n\n\n  const handleEditClick = (event, bookDetail) => {\n    event.preventDefault();\n    setEditBookId(bookDetail.id);\n\n    const formValues = {\n      Author: bookDetail.Author,\n      Title: bookDetail.Title,\n      Published: bookDetail.Published,\n      Branch: bookDetail.Branch,\n      Quantity: bookDetail.Quantity\n    }\n    setEditFormData(formValues);\n\n  }\n  const handleCancelClick = () => {\n    setEditBookId(null);\n  }\n  const handleDeleteClick = (bookId) => {\n    const newBookDetails = [...bookDetails];\n    const index = bookDetails.findIndex((bookDetail) => bookDetail.id === bookId);\n    newBookDetails.splice(index, 1);\n    setBookDetails(newBookDetails);\n\n  }\n  return (\n    <div className=\"app-container\">\n      <h1>Library Management System (Using React Hooks)</h1>\n      <form onSubmit={handleEditFormSubmit}>\n        <table>\n          <thead>\n            <tr>\n              <th>Author</th>\n              <th>Title</th>\n              <th>Published</th>\n              <th>Branch</th>\n              <th>Quantity</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {bookDetails.map((bookDetail) => (\n              <>\n                {editBookId === bookDetail.id ? (<EditableRow editFormData={editFormData} handleEditFormChange={handleEditFormChange} handleCancelClick={handleCancelClick} />) : (<ReadOnlyRow bookDetail={bookDetail} handleEditClick={handleEditClick} handleDeleteClick={handleDeleteClick} />)}\n\n\n              </>\n            ))}\n\n          </tbody>\n        </table>\n      </form>\n      <h2>Add New Books Details</h2>\n      <form onSubmit={handleAddFormSubmit}>\n        <input type='text' name='Author' required=\"required\" placeholder=\"Enter Author...\" onChange={handleFormChange} />\n        <input type='text' name='Title' required=\"required\" placeholder=\"Enter Title of book...\" onChange={handleFormChange} />\n        <input type='text' name='Published' required=\"required\" placeholder=\"Enter Published Year...\" onChange={handleFormChange} />\n        <input type='text' name='Branch' required=\"required\" placeholder=\"Enter Branch...\" onChange={handleFormChange} />\n        <input type='text' name='Quantity' required=\"required\" placeholder=\"Enter Quantity...\" onChange={handleFormChange} />\n        <button type=\"submit\" >Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}